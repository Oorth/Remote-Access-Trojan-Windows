Microsoft (R) Macro Assembler (x64) Version 14.41.34123.0   02/12/25 11:04:36
debug_check.asm						     Page 1 - 1


				;ml64 /c /Fl debug_check.asm

				; Check if debugger is present by reading the PEB flag directly
				; Compatible with x64 architecture

 00000000			.code

 00000000			IsDebuggerPresentASM PROC
 00000000  48/ 33 C0		    xor rax, rax                  ; Clear RAX to ensure higher bits are zero
 00000003  65: 48/ 8B 0C 25	    mov rcx, gs:[60h]             ; Get PEB base address from GS:[0x60]
	   00000060
 0000000C  8A 41 02		    mov al, byte ptr [rcx+2]      ; Read BeingDebugged flag (offset 0x2)
 0000000F  C3			    ret
 00000010			IsDebuggerPresentASM ENDP


 00000010			DetectHardwareBreakpointsASM PROC
 00000010  53			    push rbx                        ; Save registers to avoid corrupting them

 00000011  0F 21 C0		    mov rax, dr0
 00000014  0F 21 CB		    mov rbx, dr1
 00000017  0F 21 D1		    mov rcx, dr2
 0000001A  0F 21 DA		    mov rdx, dr3

 0000001D  48/ 0B C3		    or rax, rbx                     
 00000020  48/ 0B C1		    or rax, rcx                     
 00000023  48/ 0B C2		    or rax, rdx

 00000026  0F 95 C0		    setnz al                        ; If reg set, AL = 1, else AL = 0
 00000029  48/ 0F B6 C0		    movzx rax, al                   ; Zero-extend AL to RAX

 0000002D  5B			    pop rbx                         
 0000002E			DetectHardwareBreakpointsASM ENDP


				; DetectDebuggerTrapFlag PROC
				;     pushfq                      ; Push RFLAGS to stack
				;     or qword ptr [rsp], 0x100   ; Set Trap Flag (TF) in RFLAGS
				;     popfq                       ; Restore modified RFLAGS

				;     nop                         ; Executes normally if no debugger
				;     pushfq                      ; Push flags to check if TF triggered
				;     pop rax                     ; Retrieve flags

				;     test rax, 0x100             ; Check if Trap Flag was set
				;     setnz al                    ; AL = 1 if debugger is present
				;     movzx rax, al               ; Zero-extend AL to RAX for return

				;     ret
				; DetectDebuggerTrapFlag ENDP


 0000002E			OverwriteDebugPort PROC
 0000002E  65: 48/ 8B 04 25	    mov     rax, gs:[60h]               ; Get PEB base address
	   00000060
 00000037  48/ C7 C1		    mov     rcx, 0                      ; Move 0 into RCX (temporary register)
	   00000000
 0000003E  48/ 89 48 20		    mov     [rax + 20h], rcx            ; Clear DebugPort by writing 0
 00000042  C3			    ret                                 ; Return from procedure
 00000043			OverwriteDebugPort ENDP

 00000043			CrashOnDebuggerAttach PROC
 00000043  65: 48/ 8B 04 25	    mov rax, gs:[60h]          ; Get PEB base address
	   00000060
 0000004C  48/ B9		    mov rcx, 0FFFFFFFFFFFFFFFFh ; Load -1 into RCX
	   FFFFFFFFFFFFFFFF
 00000056  48/ 89 48 18		    mov [rax + 18h], rcx       ; Move RCX (-1) into DebugObjectHandle
 0000005A  C3			    ret
 0000005B			CrashOnDebuggerAttach ENDP

				END
Microsoft (R) Macro Assembler (x64) Version 14.41.34123.0   02/12/25 11:04:36
debug_check.asm						     Symbols 2 - 1




Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CrashOnDebuggerAttach  . . . . .	P 	 00000043 _TEXT	Length= 00000018 Public
DetectHardwareBreakpointsASM . .	P 	 00000010 _TEXT	Length= 0000001E Public
IsDebuggerPresentASM . . . . . .	P 	 00000000 _TEXT	Length= 00000010 Public
OverwriteDebugPort . . . . . . .	P 	 0000002E _TEXT	Length= 00000015 Public

	   0 Warnings
	   0 Errors
